<project name="mario" default="deploy" xmlns:ivy="antlib:org.apache.ivy.ant">

	<buildnumber file="build.number" />
	<!-- some variables used -->
	<property name="version">3.9.12</property>
	<property name="app-name">Mario-${version}</property>
	<property name="jar.name">${ant.project.name}-build.${build.number}</property>
	<property name="lib.dir" value="lib" />
	<property name="lib-local.dir" value="lib-local" />
	<property name="lib-boot.dir" value="lib-boot" />
	<property name="build.classes" value="bin" />
	<property name="src.dir" value="src" />
	<property name="conf" value="conf" />
	<property name="zip.dir" value="dist/app" />
	<property name="zip.name" value="${app-name}.zip" />
	<property name="dist.zip" value="dist/${zip.name}" />
	<property name="dist" value="dist/app/${app-name}" />
	<property name="build.jar" value="dist/jar" />
	<property name="dist.lib" value="${dist}/lib" />
	<property name="dist.lib.boot" value="${dist}/lib-boot" />
	<property name="dist.ext" value="${dist}/extensions" />
	<property name="dist.conf" value="${dist}/conf" />
	<property name="extensions" value="extensions" />
	<property name="docs" value="docs" />
	<property name="sbin" value="sbin" />
	<property name="dist.docs" value="${dist}/docs" />
	<property name="cmd">
		<![CDATA[tr -d '\015' </opt/${app-name}/start.sh.sample >/opt/${app-name}/start.sh]]></property>
	<property name="cmd1">
		<![CDATA[tr -d '\015' </opt/${ant.project.name}/start.sh.sample >/opt/${ant.project.name}/start.sh]]></property>

	<!-- clean cache for ivy -->
	<target name="clean-ivy-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>

	<!-- User when ivy.xml changed -->
	<target name="resolve" description="retreive dependencies with ivy">
		<delete dir="${lib.dir}">
			<include name="*.jar" />
			<exclude name="sqljdbc4*.jar" />
		</delete>
		<ivy:settings file="ivysettings.xml" />
		<ivy:retrieve />
	</target>

	<target name="report" depends="resolve" description="generates a report of dependencies">
		<ivy:report todir="${build.classes}" />
	</target>

	<target name="clear" description="delete dist folder">
		<delete dir="${dist}" />
		<delete dir="dist/Mario*" />
	</target>

	<target name="prep" depends="clear" description="make dirs">
		<mkdir dir="${dist}" />
		<mkdir dir="${dist.lib}" />
		<mkdir dir="${dist.conf}" />
		<mkdir dir="${dist.docs}" />
		<mkdir dir="${dist.ext}" />
		<mkdir dir="${build.jar}" />
	</target>

	<target name="build" depends="prep" description="build jar file">
		<delete>
			<fileset dir="${build.jar}">
				<include name="${ant.project.name}-b*.jar" />
			</fileset>
		</delete>
		<jar jarfile="${build.jar}/${jar.name}.jar">
			<fileset dir="${build.classes}" />
		</jar>
	</target>

	<target name="deploy" depends="build" description="copy nessesary files to dist folder">
		<delete>
			<fileset dir="${dist}" />
		</delete>
		<copy todir="${dist.conf}">
			<fileset dir="${conf}">
				<exclude name="db" />
			</fileset>
		</copy>
		<copy todir="${dist.lib}">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
				<exclude name="slf4j-log4j*" />
				<exclude name="netty-3.*" />
			</fileset>
		</copy>
		<copy todir="${dist.lib}">
			<fileset dir="${lib-local.dir}">
				<include name="*.jar" />
				<exclude name="slf4j-log4j*" />
			</fileset>
		</copy>
		<copy todir="${dist.lib.boot}">
			<fileset dir="${lib-boot.dir}">
				<include name="*.jar" />
				<exclude name="slf4j-log4j*" />
			</fileset>
		</copy>
		<copy todir="${dist.lib}">
			<fileset dir="${build.jar}">
				<exclude name="slf4j-log4j*" />
			</fileset>
		</copy>
		<copy todir="${dist.ext}">
			<fileset dir="${extensions}" />
		</copy>
		<copy todir="${dist}">
			<fileset dir="${sbin}" />
		</copy>
		<copy todir="${dist.docs}" failonerror="false">
			<fileset dir="${docs}" />
		</copy>
	</target>

	<target name="zip">
		<zip destfile="${dist.zip}" basedir="${zip.dir}" />
	</target>

	<target name="pack-and-zip" depends="deploy, zip" />

	<target name="deploy-remotely" depends="zip">
		<input message="Input target host" addproperty="remote.host" />
		<input message="Input target port" addproperty="remote.port" defaultvalue="22" />
		<input message="Input ssh username" addproperty="remote.user" defaultvalue="root" />
		<input message="Input ssh password" addproperty="remote.pwd" />
		<input message="Input target dir (without / at the end) to deploy (default is '/opt')" addproperty="remote.path" defaultvalue="/opt" />
		<sshexec keyfile="~/.ssh/id_rsa" command="rm -fr ${remote.path}/${zip.name}" host="${remote.host}" port="${remote.port}" username="${remote.user}" password="${remote.pwd}" trust="true" failonerror="true" />
		<scp keyfile="~/.ssh/id_rsa" todir="root@${remote.host}:${remote.port}${remote.path}" password="${remote.pwd}" trust="yes">
			<fileset dir="${dist}">
				<include name="${zip.name}" />
			</fileset>
		</scp>
	</target>
</project>
